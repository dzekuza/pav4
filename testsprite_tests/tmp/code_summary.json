{
  "tech_stack": [
    "TypeScript",
    "Node.js",
    "Express.js",
    "PostgreSQL",
    "Prisma ORM",
    "React",
    "Vite",
    "Tailwind CSS",
    "JWT Authentication",
    "Puppeteer",
    "N8N Webhooks",
    "Gemini AI API",
    "SearchAPI"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete JWT-based authentication system with user registration, login, logout, and current user info",
      "files": [
        "server/routes/auth.ts",
        "server/middleware/auth.ts",
        "server/services/database.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/auth/register": {
            "post": {
              "summary": "Register new user",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      },
                      "required": ["email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "User registered successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {"type": "boolean"},
                          "token": {"type": "string"},
                          "accessToken": {"type": "string"},
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {"type": "integer"},
                              "email": {"type": "string"},
                              "isAdmin": {"type": "boolean"}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/auth/login": {
            "post": {
              "summary": "Login user",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      },
                      "required": ["email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Login successful",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {"type": "boolean"},
                          "token": {"type": "string"},
                          "accessToken": {"type": "string"},
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {"type": "integer"},
                              "email": {"type": "string"},
                              "isAdmin": {"type": "boolean"}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/auth/logout": {
            "post": {
              "summary": "Logout user",
              "responses": {
                "200": {
                  "description": "Logout successful",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {"type": "boolean"}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/auth/me": {
            "get": {
              "summary": "Get current user info",
              "responses": {
                "200": {
                  "description": "User info retrieved",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {"type": "integer"},
                              "email": {"type": "string"},
                              "isAdmin": {"type": "boolean"}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Search History Management",
      "description": "User search history tracking with add, retrieve, and management capabilities",
      "files": [
        "server/routes/auth.ts",
        "server/services/database.ts",
        "prisma/schema.prisma"
      ],
      "api_doc": {
        "paths": {
          "/api/search-history": {
            "post": {
              "summary": "Add search to history",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "url": {"type": "string"},
                        "title": {"type": "string"},
                        "requestId": {"type": "string"}
                      },
                      "required": ["url", "title", "requestId"]
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Search added to history"
                }
              }
            },
            "get": {
              "summary": "Get user search history",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {
                  "description": "Search history retrieved",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "history": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {"type": "string"},
                                "title": {"type": "string"},
                                "requestId": {"type": "string"},
                                "timestamp": {"type": "string"}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Product Scraping",
      "description": "Advanced product scraping with N8N webhook integration and AI-powered validation",
      "files": [
        "server/routes/n8n-scrape.ts",
        "server/index.ts",
        "shared/api.ts"
      ],
      "api_doc": {
        "paths": {
          "/api/scrape": {
            "post": {
              "summary": "Scrape product data",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "url": {"type": "string"},
                        "userLocation": {
                          "type": "object",
                          "properties": {
                            "country": {"type": "string"}
                          }
                        }
                      },
                      "required": ["url"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Product data scraped",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "product": {
                            "type": "object",
                            "properties": {
                              "title": {"type": "string"},
                              "price": {"type": "number"},
                              "currency": {"type": "string"},
                              "url": {"type": "string"},
                              "image": {"type": "string"},
                              "store": {"type": "string"}
                            }
                          },
                          "comparisons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {"type": "string"},
                                "store": {"type": "string"},
                                "price": {"type": "number"},
                                "currency": {"type": "string"},
                                "url": {"type": "string"},
                                "image": {"type": "string"},
                                "condition": {"type": "string"},
                                "assessment": {"type": "object"}
                              }
                            }
                          },
                          "requestId": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/n8n-scrape": {
            "post": {
              "summary": "N8N webhook scraping",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "url": {"type": "string"},
                        "requestId": {"type": "string"},
                        "userLocation": {
                          "type": "object",
                          "properties": {
                            "country": {"type": "string"}
                          }
                        }
                      },
                      "required": ["url"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "N8N scraping results",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "mainProduct": {
                            "type": "object",
                            "properties": {
                              "title": {"type": "string"},
                              "price": {"type": "string"},
                              "image": {"type": "string"},
                              "url": {"type": "string"}
                            }
                          },
                          "suggestions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {"type": "string"},
                                "standardPrice": {"type": "string"},
                                "discountPrice": {"type": "string"},
                                "site": {"type": "string"},
                                "link": {"type": "string"},
                                "image": {"type": "string"}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Location Services",
      "description": "Geolocation detection and local dealer recommendations",
      "files": [
        "server/services/location.ts"
      ],
      "api_doc": {
        "paths": {
          "/api/location": {
            "get": {
              "summary": "Get user location and local dealers",
              "responses": {
                "200": {
                  "description": "Location data retrieved",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "location": {
                            "type": "object",
                            "properties": {
                              "country": {"type": "string"},
                              "countryCode": {"type": "string"},
                              "region": {"type": "string"},
                              "city": {"type": "string"},
                              "currency": {"type": "string"},
                              "timeZone": {"type": "string"}
                            }
                          },
                          "localDealers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {"type": "string"},
                                "url": {"type": "string"},
                                "country": {"type": "string"},
                                "region": {"type": "string"},
                                "searchUrlPattern": {"type": "string"},
                                "currency": {"type": "string"},
                                "priority": {"type": "integer"}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Admin Management",
      "description": "Admin-only user management and system administration",
      "files": [
        "server/routes/auth.ts",
        "server/middleware/auth.ts"
      ],
      "api_doc": {
        "paths": {
          "/api/admin/users": {
            "get": {
              "summary": "Get all users (admin only)",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {
                  "description": "Users list retrieved",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "users": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {"type": "integer"},
                                "email": {"type": "string"},
                                "isAdmin": {"type": "boolean"},
                                "createdAt": {"type": "string"},
                                "searchCount": {"type": "integer"}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Health Check",
      "description": "System health monitoring and database connectivity checks",
      "files": [
        "server/routes/health.ts",
        "server/services/database.ts"
      ],
      "api_doc": {
        "paths": {
          "/api/health": {
            "get": {
              "summary": "System health check",
              "responses": {
                "200": {
                  "description": "Health status",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {"type": "string"},
                          "message": {"type": "string"},
                          "database": {
                            "type": "object",
                            "properties": {
                              "status": {"type": "string"},
                              "message": {"type": "string"}
                            }
                          },
                          "stats": {
                            "type": "object",
                            "properties": {
                              "users": {"type": "integer"},
                              "searches": {"type": "integer"},
                              "legacySearches": {"type": "integer"}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/ping": {
            "get": {
              "summary": "Simple ping endpoint",
              "responses": {
                "200": {
                  "description": "Pong response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
} 