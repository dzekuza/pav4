generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  isAdmin       Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  searchHistory SearchHistory[]
  favorites     Favorite[]

  @@map("users")
}

model SearchHistory {
  id        Int      @id @default(autoincrement())
  url       String
  title     String
  requestId String
  timestamp DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([timestamp])
  @@map("search_history")
}

model Favorite {
  id            Int      @id @default(autoincrement())
  userId        Int
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title         String
  price         String?
  currency      String?
  url           String
  image         String?
  store         String?
  merchant      String?
  stock         String?
  rating        Float?
  reviewsCount  Int?
  deliveryPrice String?
  details       String?
  returnPolicy  String?
  condition     String   @default("New")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([createdAt])
  @@map("favorites")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("admin")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model LegacySearchHistory {
  id        Int      @id @default(autoincrement())
  userKey   String
  url       String
  timestamp DateTime @default(now())

  @@index([userKey])
  @@index([timestamp])
  @@map("legacy_search_history")
}
