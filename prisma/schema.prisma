generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  isAdmin       Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  favorites     Favorite[]
  searchHistory SearchHistory[]

  @@map("users")
}

model SearchHistory {
  id        Int      @id @default(autoincrement())
  url       String
  title     String
  requestId String
  timestamp DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([timestamp])
  @@map("search_history")
}

model Favorite {
  id            Int      @id @default(autoincrement())
  userId        Int
  title         String
  price         String?
  currency      String?
  url           String
  image         String?
  store         String?
  merchant      String?
  stock         String?
  rating        Float?
  reviewsCount  Int?
  deliveryPrice String?
  details       String?
  returnPolicy  String?
  condition     String   @default("New")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@map("favorites")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("admin")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model LegacySearchHistory {
  id        Int      @id @default(autoincrement())
  userKey   String
  url       String
  timestamp DateTime @default(now())

  @@index([userKey])
  @@index([timestamp])
  @@map("legacy_search_history")
}

model Business {
  id                  Int      @id @default(autoincrement())
  name                String
  domain              String   @unique
  website             String
  description         String?
  logo                String?
  isActive            Boolean  @default(true)
  isVerified          Boolean  @default(false)
  contactEmail        String?
  contactPhone        String?
  address             String?
  country             String?
  category            String?
  commission          Float    @default(0)
  email               String   @unique
  password            String
  totalVisits         Int      @default(0)
  totalPurchases      Int      @default(0)
  totalRevenue        Float    @default(0)
  adminCommissionRate Float    @default(5.0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("businesses")
}

model AffiliateUrl {
  id          Int      @id @default(autoincrement())
  name        String
  url         String
  description String?
  isActive    Boolean  @default(true)
  clicks      Int      @default(0)
  conversions Int      @default(0)
  revenue     Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("affiliate_urls")
}

model ClickLog {
  id          Int      @id @default(autoincrement())
  affiliateId String
  productId   String
  userId      Int?
  timestamp   DateTime @default(now())
  userAgent   String?
  referrer    String?
  ip          String?
}

model Settings {
  id        Int    @id @default(autoincrement())
  key       String @unique
  value     String
}
